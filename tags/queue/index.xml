<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>queue on ngld</title>
    
    
    
    <link>/tags/queue/</link>
    <description>Recent content in queue on ngld</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 06 Aug 2022 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/queue/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Priority_queue</title>
      <link>/blogs/priority_queue/</link>
      <pubDate>Sat, 06 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>/blogs/priority_queue/</guid>
      <description>
        
          
          
          
        
        
        
          priority_queue using top(), pop(), empty(), &amp;hellip; queue using front(), pop(), back(), &amp;hellip; deque using push_front(), push_back(), pop_front(), pop_back(), &amp;hellip; priority_queue#Example of priority_queue priority_queue&amp;lt;int&amp;gt; pq;pq.push(10);pq.push(20);pq.push(30);pq.push(40);pq.push(12);pq.push(1);pq.push(5); Default C++ creates a max-heap for priority queue while(!pq.empty()){cout&amp;lt;&amp;lt; pq.top()&amp;lt;&amp;lt; &amp;#34; &amp;#34;;pq.pop();}// 40 30 20 12 10 5 1pq.size(); // 7pq.top(); // 40pq.pop(); // 30 20 12 10 5 1 Creating min-heap for priority queue while(!
          
        
        </description>
    </item>
    
  </channel>
</rss>